node {

    withCredentials([
        string(credentialsId: 'port_user', variable: 'PORT_USER')
        ,string(credentialsId: 'port_pass', variable: 'PORT_PASS')
    ]) {

    	stage('Cloning daex-meta') {
            git url: 'http://gitlab/daex/daex-meta.git'
    	}

    	stage('Build Daex: centos') {
            dir('stacks/daex-ldap/centos') {
             	sh 'docker build -t centos/system .'
            }
    	
	stage('Build Daex: daexbase') {
            dir('stacks/daex-ldap/daexbase') {
             	sh 'docker build -t daex-meta/daexbase:ldap .'
            }
    	}
    
    	stage('Build Daex: jupyterhub') {
            dir('stacks/daex-ldap/jupyterhub') {
            	sh 'docker build -t docker.service:5000/daex-meta/jupyterhub:ldap .'
            }
    	}
    
   	stage('Push Daex: jupyterhub') {
            dir('stacks') {
            	sh 'docker push docker.service:5000/daex-meta/jupyterhub:ldap'
            }
    	}
    
    	stage('Build Daex: rbase') {
            dir('stacks/daex-ldap/rbase') {
            	sh 'docker build -t daex-meta/rbase:ldap .'
            }
    	}
    
    	stage('Build Daex: rstudio') {
            dir('stacks/daex-ldap/rstudio') {
            	sh 'docker build -t docker.service:5000/daex-meta/rstudio:ldap .'
            }
    	}	

    	stage('Push Daex: rstudio') {
            dir('stacks') {
            	sh 'docker push docker.service:5000/daex-meta/rstudio:ldap'
            }
    	}	
    
    	stage('Build Daex: shiny') {
            dir('stacks/daex-ldap/shiny') {
            	sh 'docker build -t docker.service:5000/daex-meta/shiny:ldap .'
            }
    	}
    
        stage('Push Daex: shiny') {
            dir('stacks') {
            	sh 'docker push docker.service:5000/daex-meta/shiny:ldap'
            }
        }

    	stage('Deploy Daex') {
            dir('stacks') {
            	sh 'deploy_stack daex daex-ldap/docker-compose.yml'
       	    }
    	}

	stage('Update nginx') {
            dir('stacks') {
                sh 'add_folder nginx_nginx /etc/nginx/conf.d daex/daex.conf'
		sh 'redeploy_stack nginx nginx/docker-compose.yml'
            }
        }
    }
}
