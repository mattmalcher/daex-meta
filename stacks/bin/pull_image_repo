#!/usr/bin/env python3
import sys
import base64
import requests as rt
from pyport import swarm as sw


def pull_image_repo(i: str, t: str, n: str = '', u: str = "admin", p:str = "password", r: str = 'docker.service:5000', s: str = 'http://portainer:9000/api', e: str = '1') -> dict:
    """Pull docker image.

    Pull an image from Dockerhub or from a private registry.
    Private registeries need to be defined within Portainer.

    Args:
        i: Image to pull
        t: Authorization token
        n: Swarm node name
        s: Portainer server api endpoint
        e: Docker endpoint id
    Returns:
        Portainer api response

    """
    return rt.post(
        s + '/endpoints/' + e + '/docker/images/create',
        headers = {
            'Authorization': 'Bearer ' + t,
            'X-Registry-Auth': base64.b64encode(
                b'{"username": "'+ bytes(u, 'utf-8') +
                b'", "password": "' + bytes(p, 'utf-8') +
                b'", "serveraddress": "' + bytes(r, 'utf-8') + b'"}'
            ),
            'X-PortainerAgent-Target': n
        },
        params = {'fromImage': i}
    )

port_api = sw.create_api_string(sys.argv, 1)

token = sw.generate_token('admin', 'password', port_api)

pull = pull_image_repo(
    sys.argv[1],
    token,
    s = port_api
)

print(pull.text)

